server:
  port: 5001
  servlet:
    context-path: /api
#  compression:
#    enabled: true
#    min-response-size: 1024

spring:
  application:
    name: congthanhapp-ecommerce-cart-service
  config:
    import: optional:file:.env[.properties]
    activate:
      on-profile: dev
  web:
    cors:
      allowed-origins: "http://localhost:3000"
      allowed-methods: GET,POST,PUT,PATCH,DELETE
      allowed-headers: "*"
      allow-credentials: true
  datasource:
    url: jdbc:postgresql://localhost:5432/CongThanhApp-Ecommerce
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver

  jpa:
    database: default
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    mongodb:
      uri: mongodb://localhost:27017/CongThanhApp-Ecommerce
      database: CongThanhApp-Ecommerce

    redis:
      port: 6379
      password: your_password_if_any
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  rabbitmq:
    host: localhost
    port: 5672
    username: congthanh
    password: 123456
  activemq:
    packages:
      trust-all: true

  graphql:
    graphiql:
      enable: true
    cors:
      allowed-origins: "*"
    schema:
      printer:
        enabled: true
    path: /graphql


  security:
    user:
      name: user # Tên người dùng mặc định
      password: password # Mật khẩu mặc định
    jwt:
      token:
        secretKey: ${JWT_SECRET_KEY}
        tokenPrefix: "Bearer "
        tokenExpirationAfterDays: 30

#  main:
#    allow-circular-references: true
#    allow-bean-definition-overriding: true

#  mail:
#    host: smtp.example.com
#    port: 587
#    username: myemail@example.com
#    password: emailpassword
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
#
#  cache:
#    type: caffeine
#    caffeine:
#      spec: maximumSize=500,expireAfterAccess=600s

#    Cấu hình upload file
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: cart-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  messages:
    basename: messages

grpc:
  server:
    port: 9090
    in-process-name: congthanhapp-ecommerce-cart-service
    reflection-service-enabled: true
  client:
    product-service:
      address: "localhost:9090"
      negotiationType: "PLAINTEXT"

ai:
  ollama:
    embedding:
      enabled: false
  vectorstore:
    pgvector:
      index-type: hnsw
      distance-type: cosine_distance
      dimensions: 384

congthanhapp:
  openapi:
    dev-url: http://localhost:5000 #http://localhost:${SERVER_PORT}
    prod-url: https://congthanhapp-api.com

springdoc:
  swagger-ui:
    tagsSorter: alpha
    path: /swagger-ui
  enable-spring-security: true

#logging:
#  level:
#    root: INFO
##    com.yourpackage: DEBUG # Thiết lập mức log cho package cụ thể
##  org.springframework.data.mongodb.core.MongoTemplate: DEBUG
##    org.springframework.data.redis.core.RedisTemplate: DEBUG
#  file:
#    name: /var/log/myapp.log
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
#    prefer-ip-address: true

axon:
  axonserver:
    servers: localhost:8124
    enabled: true

snowflake:
  worker-id: 1
  datacenter-id: 1

resilience4j:
  circuitbreaker:
    instances:
      rest-circuit-breaker:
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      rest-api:
        max-attempts: 3
