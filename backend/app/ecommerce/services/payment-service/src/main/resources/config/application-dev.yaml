server:
  port: 5008 #${SERVER_PORT}
  servlet:
    context-path: /api
#  compression:
#    enabled: true
#    min-response-size: 1024
#  ssl:
#    key-store: classpath:keystore.p12  # Đường dẫn đến keystore
#    key-store-password: password       # Mật khẩu keystore
#    key-store-type: PKCS12             # Loại keystore
#    key-alias: tomcat                  # Alias của key

spring:
  application:
    name: congthanhapp-ecommerce-payment-service

  config:
    import: optional:file:.env[.properties]
    activate:
      on-profile: dev
  web:
    cors:
      allowed-origins: "http://localhost:3000"
      allowed-methods: GET,POST,PUT,PATCH,DELETE
      allowed-headers: "*"
      allow-credentials: true

  datasource:
    url: jdbc:postgresql://localhost:5432/CongThanhApp-Ecommerce
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver

  jpa:
    database: default
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    mongodb:
      uri: mongodb://localhost:27017/MyDream
      database: CongThanhApp

    redis:
      port: 6379
      password: your_password_if_any
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  graphql:
    graphiql:
      enabled: true
    cors:
      allowed-origins: "*"
    schema:
      printer:
        enabled: true
    path: /graphql

  security:
    user:
      name: user # Tên người dùng mặc định
      password: password # Mật khẩu mặc định
    jwt:
      token:
        secretKey: ${JWT_SECRET_KEY}
        tokenPrefix: "Bearer "
        tokenExpirationAfterDays: 30

#  main:
#    allow-circular-references: true
#    allow-bean-definition-overriding: true

#  mail:
#    host: smtp.example.com
#    port: 587
#    username: myemail@example.com
#    password: emailpassword
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
#
#  cache:
#    type: caffeine
#    caffeine:
#      spec: maximumSize=500,expireAfterAccess=600s

  #    Cấu hình upload file
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: congthanhapp-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  messages:
    basename: messages

keycloak:
  realm: ecommerce-realm
  auth-server-url: http://keycloak:8080/auth
  resource: catalog-service
  bearer-only: true
  ssl-required: external
  credentials:
    secret: your-client-secret
  autodetect-bearer-only: true
  cors: true
  ai:
    ollama:
      embedding:
        enabled: false
    vectorstore:
      pgvector:
        index-type: hnsw
        distance-type: cosine_distance
        dimensions: 384

grpc:
  server:
    port: 9090
    in-process-name: congthanhapp-ecommerce-cart-service
    reflection-service-enabled: true

congthanhapp:
  openapi:
    dev-url: http://localhost:5000 #http://localhost:${SERVER_PORT}
    prod-url: https://congthanhapp-api.com

springdoc:
  swagger-ui:
    tagsSorter: alpha
  enable-spring-security: true

#logging:
#  level:
#    root: INFO
##    com.yourpackage: DEBUG # Thiết lập mức log cho package cụ thể
##  org.springframework.data.mongodb.core.MongoTemplate: DEBUG
##    org.springframework.data.redis.core.RedisTemplate: DEBUG
#  file:
#    name: /var/log/myapp.log
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka/
  instance:
    hostname: localhost

axon:
  axonserver:
    servers: localhost:8124
    enabled: true
  serializer:
    events: jackson

snowflake:
  worker-id: 1
  datacenter-id: 1

resilience4j:
  circuitbreaker:
    instances:
      rest-circuit-breaker:
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      rest-api:
        max-attempts: 3

paypal:
  client:
    id: ARyn0ImfB1VNxiCQk6rHxnpaU80AZCpSAmHuG_xh2Wtggyo3NX-bL3dPusB5ngXOqROSeWAcJSFdDa_v
    secret: EKBIF7_abytr1Xig0MUWrBiXT-rPRPtmfxuSxrMpUTkd_UW-NxrBcI05PAHrCFkwY5g52htXRnE9htTz
  mode: sandbox # 'live' for production

stripe:
  api:
    key: sk_test_51QJqCNAhMlLU3M6EMdkbkBq81BwIaEbZBfGNArb3lbSFx0GBG9aU2hV9685sd5Rd8PrjMbkja5Dm9qF5JMwGnjBi00vfPWhtdL
  secret:
    key: sk_test_51QJqCNAhMlLU3M6EMdkbkBq81BwIaEbZBfGNArb3lbSFx0GBG9aU2hV9685sd5Rd8PrjMbkja5Dm9qF5JMwGnjBi00vfPWhtdL

payment:
  encryption:
    iv: 123456789abcdef

  momo:
    partnerCode: YOUR_PARTNER_CODE
    accessKey: YOUR_ACCESS_KEY
    secretKey: YOUR_SECRET_KEY
    redirectUrl: https://your-frontend.com/payment/success
    ipnUrl: https://your-backend.com/api/payment/ipn

  vnpay:
    tmnCode: NYN1JND3
    hashSecret: EL1DJ219PW3P2N8WJPPHMN5RU20PWLM6
    payUrl: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
    returnUrl: http://localhost:3000/payment/callback
